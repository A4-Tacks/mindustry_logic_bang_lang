// Mindustry Logic 的语法高亮规则
// repo: https://github.com/A4-Tacks/mindustry_logic_bang_lang
{
    name: ["MindustryLogic", ".logic"]
    hide: false
    colors: [
        "resultVar",    #00C897, #00C897
        "envVar",       #1FAB89, #1FAB89
        "block",        #D4816B, #D4816B
        "control",      #6BB2B2, #6BB2B2
        "operation",    #877BAD, #877BAD
        "io",           #A08A8A, #A08A8A
        "unit",         #C7B59D, #C7B59D
        "world",        #6B84D4, #6B84D4
    ]
    comment: {startsWith: "#"}
    defines: [
        //!includeBegin
        ws = /[ \t]/
        _ = @ws /+/
        bg = /(?:(?:[\n;]|^)/ @ws /*)/
        ed = /(?:/ @ws /*(?=;|(?:#[^\n]*)?(?:\n|$)))/
        string = /(?:"(?:(\[\[|\\n)|[^"\n])*(?:"|/ @ed /))/
            $0: "string"
            $1: "strEscape"

        hex-oct = /0(?:x-?[\da-fA-F]+|b-?[01]+)/
        val = /(?:/ @string /|(true|false|/ @hex-oct
                /|-?\d+(?:\.\d+|e[+\-]?\d+)?)|(?:(?!/ @ws /)[^"#;\n])+)/
            $1: "number"
        var = @val
            $0: "resultVar"
        err = @val
            $0: "error"
        fill = @val
            $0: "comment"


        radar-selecter = /(?:(?:a(?:ny|lly|ttacker)|enemy|player|flying|boss|ground)|/ @err /)/
        radar-order = /(?:(?:distance|health|shield|armor|maxHealth)|/ @err /)/
        op-operator1 = /(?:not|a(?:bs|sin|cos|tan)|log(?:10)?|floor|c(?:eil|os)|s(?:qrt|in)|rand|tan)/
        op-operator2 = /(?:a(?:dd|n(?:d|gle(?:Diff)?))|s(?:ub|trictEqual|h(?:l|r))|m(?:ul|od|ax|in)|div|idiv|pow|equal|no(?:tEqual|ise)|l(?:and|e(?:ssThan(?:Eq)?|n))|greaterThan(?:Eq)?|or|xor)/
        jump-cmper = /(?:(?:equal|notEqual|lessThan(?:Eq)?|greaterThan(?:Eq)?|strictEqual|always)|/ @err /)/

        ucontrol-normal = /(i(?:dle|tem(?:Drop|Take))|stop|m(?:ove|ine)|a(?:pproach|utoPathfind)|pa(?:thfind|y(?:Drop|Take|Enter))|b(?:oost|uild)|targetp?|flag|unbind)/ (?:@_ @val){5}
            $1: "unit"
        ucontrol-extend = (?:
                /(getBlock)/ (?:@_ @val){2} (?:@_ @var){3}
                | /(within)/ (?:@_ @val){3} @_ @var @_ @val
                )
            $1: "unit"
            $2: "unit"
        ucontrol-failed = @err (?:@_ @val){5}

        ulocate-type = (?:/(core|storage|generator|turret|factory|r(?:e(?:pair|actor)|ally)|battery)/ | @err)
            $1: "unit"


        logic-lines-label := {
            : @bg /(/ @val /:)/ @ed
                $recordAllGroups: true
                $1: "label"
        }

        logic-lines-io := {
            : @bg /noop/ @ed
                $0: "control"
            : @bg /(read)/ @_ @var (?:@_ @val){2} @ed
                $recordAllGroups: true
                $1: "io"
            : @bg /(write)(?:/ @_ @val /){3}/ @ed
                $recordAllGroups: true
                $1: "io"
            : @bg /(draw)/ @_ /(?:(c(?:lear|ol(?:or)?)|stroke|line(?:Rect|Poly)?|rect|poly|triangle|image)|/ @err /)(?:/ @_ @val /){6}/ @ed
                $recordAllGroups: true
                $1: "io"
                $2: "io"
            : @bg /(print)/ @_ @val @ed
                $recordAllGroups: true
                $1: "io"
        }

        logic-lines-block := {
            : @bg /((?:draw|print)flush)/ @_ @val @ed
                $recordAllGroups: true
                $1: "block"
            : @bg /(getlink)/ @_ @var @_ @val @ed
                $recordAllGroups: true
                $1: "block"
            : @bg /(control)/ @_ /(?:(enabled|shootp?|co(?:nfig|lor))|/ @err /)(?:/ @_ @val /){5}/ @ed
                $recordAllGroups: true
                $1: "block"
                $2: "block"
            : @bg /(radar)/ ((?:@_ @radar-selecter){3} @_ @radar-order) @_ @val @_ @val @_ @var @ed
                $recordAllGroups: true
                $1: "block"
                $2: "block"
            : @bg /(sensor)/ @_ @var @_ @val @_ @val @ed
                $recordAllGroups: true
                $1: "block"
        }

        logic-lines-operation := {
            : @bg /(set)/ @_ @var @_ @val @ed
                $recordAllGroups: true
                $1: "operation"
            : @bg /(op)/ @_ (?:
                    (@op-operator1) @_ @var @_ @val @_ @fill
                    | (@op-operator2) @_ @var @_ @val @_ @val
                    | @err (?:@_ @val){3}
                    ) @ed
                $recordAllGroups: true
                $1: "operation"
                $2: "operation"
                $3: "operation"
            : @bg /(lookup)/ @_ /(?:(item|block|unit|liquid)|/ @err /)/ @_ @var @_ @val @ed
                $recordAllGroups: true
                $1: "operation"
                $2: "operation"
            : @bg /(packcolor)/ @_ @var /(?:/ @_ @val /){4}/
                $recordAllGroups: true
                $1: "operation"
        }

        logic-lines-control := {
            : @bg /(jump/ @_ /:?)/ (@val) @_ (?:
                    /(always)/ (?:@_ @fill){2}
                    | (@jump-cmper) @_ @val @_ @val
                    ) @ed
                $recordAllGroups: true
                $1: "control"
                $2: "label"
                $3: "control"
                $4: "control"
            : @bg /(end|stop)/ @ed
                $1: "control"
            : @bg /(wait)/ @_ @val @ed
                $recordAllGroups: true
                $1: "control"
        }

        logic-lines-unit := {
            : @bg /(ubind)/ @_ @val @ed
                $recordAllGroups: true
                $1: "unit"
            : @bg /(ucontrol)/ @_ (?:@ucontrol-normal | @ucontrol-extend | @ucontrol-failed) @ed
                $recordAllGroups: true
                $1: "unit"
                $2: "unit"
            : @bg /(uradar)/ ((?:@_ @radar-selecter){3} @_ @radar-order) (?:@_ @val){2} @_ @var @ed
                $recordAllGroups: true
                $1: "unit"
                $2: "unit"
            : @bg /(ulocate)/ @_ (?:
                    /(ore)/ @_ @ulocate-type @_ @fill @_ @val (?:@_ @var){3} @_ @val
                    | /(building)/ @_ @ulocate-type @_ @val @_ @fill (?:@_ @var){4}
                    | /(spawn|damaged)/ @_ @ulocate-type (?:@_ @fill){2} (?:@_ @var){4}
                    | @err @_ @ulocate-type (?:@_ @val){6}
                    ) @ed
                $recordAllGroups: true
                $1: "unit"
                $2: "unit"
                $3: "unit"
                $4: "unit"
        }

        logic-lines := {
            ::logic-lines-label
            ::logic-lines-io
            ::logic-lines-block
            ::logic-lines-operation
            ::logic-lines-control
            ::logic-lines-unit
        }
        //!includeEnd
    ]
    contains: [
        {include: "logic-lines"}
    ]
}
