// Mindustry Logic 的语法高亮规则
// repo: https://github.com/A4-Tacks/mindustry_logic_bang_lang
{
    name: ["MindustryLogic", ".logic"]
    hide: false
    colors: [
        "resultVar",    #00C897, #00C897
        "envVar",       #1FAB89, #1FAB89
        "block",        #D4816B, #D4816B
        "control",      #6BB2B2, #6BB2B2
        "operation",    #877BAD, #877BAD
        "io",           #A08A8A, #A08A8A
        "unit",         #C7B59D, #C7B59D
        "world",        #6B84D4, #6B84D4
    ]
    defines: [
        "bg": /(?<=(?:\n|^)\s*)/
        "ed": /(?:\s*(?=\n|$))/
        "string": /(?:"[^"\n]*(?:"|/+include("ed")+/))/
        "val": /(?:/+include("string")+/|[^"\s]+)/
    ]
    contains: [
        {
            match: include("bg")+include("val")+/:/+include("ed")
            0: "label"
        }
        {
            match: include("bg")+/(noop)/+include("ed")
            1: "control"
        }
        {
            match: include("bg")+/(read)\s+(/+include("val")+/)(?:\s+/+include("val")+/){2}/+include("ed")
            1: "io"
            2: "resultVar"
        }
        {
            match: include("bg")+/(write)(?:\s+/+include("val")+/){3}/+include("ed")
            1: "io"
        }
        {
            match: include("bg")+/(draw)\s+(?:(c(?:lear|ol(?:or)?)|stroke|line(?:Rect|Poly)?|rect|poly|triangle|image)|(/+include("val")+/))(?:\s+/+include("val")+/){6}/+include("ed")
            1: "io"
            2: "io"
            3: "error"
        }
        {
            match: include("bg")+/(print)\s+/+include("val")+include("ed")
            1: "io"
        }
        {
            match: include("bg")+/(drawflush)\s+/+include("val")+include("ed")
            1: "block"
        }
        {
            match: include("bg")+/(printflush)\s+/+include("val")+include("ed")
            1: "block"
        }
        {
            match: include("bg")+/(getlink)\s+(/+include("val")+/)\s+/+include("val")+include("ed")
            1: "block"
            2: "resultVar"
        }
        {
            match: include("bg")+/(control)\s+(?:(enabled|shootp?|co(?:nfig|lor))|(/+include("val")+/))(?:\s+/+include("val")+/){5}/+include("ed")
            1: "block"
            2: "block"
            3: "error"
        }
        {
            match: include("bg")+/(radar)(?:(?:\s+(?:(a(?:ny|lly|ttacker)|enemy|player|flying|boss|ground)|(/+include("val")+/))){3})\s+(?:(distance|health|shield|armor|maxHealth)|(/+include("val")+/))(?:\s+/+include("val")+/){2}\s+(/+include("val")+/)/+include("ed")
            recordAllGroups: true
            1: "block"
            2: "block"
            3: "error"
            4: "block"
            5: "error"
            6: "resultVar"
        }
        {
            match: include("bg")+/(sensor)\s+(/+include("val")+/)(?:\s+/+include("val")+/){2}/+include("ed")
            1: "block"
            2: "resultVar"
        }
        {
            match: include("bg")+/(set)\s+(/+include("val")+/)\s+/+include("val")+include("ed")
            1: "operation"
            2: "resultVar"
        }
        {
            match: include("bg")+/(op)\s+(?:(a(?:bs|cos|dd|n(?:d|gle(?:Diff)?)|sin|tan)|c(?:eil|os)|div|equal|floor|greaterThan(?:Eq)?|idiv|l(?:and|e(?:n|ssThan(?:Eq)?)|og(?:10)?)|m(?:ax|in|od|ul)|no(?:ise|t(?:Equal)?)|or|pow|rand|s(?:h(?:l|r)|in|qrt|trictEqual|ub)|tan|xor)|(/+include("val")+/))\s+(/+include("val")+/)\s+/+include("val")+/\s+/+include("val")+include("ed")
            1: "operation"
            2: "operation"
            3: "error"
            4: "resultVar"
        }
        {
            match: include("bg")+/(wait)\s+/+include("val")+include("ed")
            1: "control"
        }
        {
            match: include("bg")+/(stop)/+include("ed")
            1: "control"
        }
        {
            match: include("bg")+/(lookup)\s+(?:(item|block|unit|liquid)|(/+include("val")+/))\s+(/+include("val")+/)\s+/+include("val")+include("ed")
            1: "operation"
            2: "operation"
            3: "error"
            4: "resultVar"
        }
        {
            match: include("bg")+/(packcolor)\s+(/+include("val")+/)(?:\s+/+include("val")+/){4}/+include("ed")
            1: "operation"
            2: "resultVar"
        }
        {
            match: include("bg")+/(end)/+include("ed")
            1: "control"
        }
        {
            match: include("bg")+/(jump)\s+(/+include("val")+/)\s+(?:(equal|notEqual|lessThan(?:Eq)?|greaterThan(?:Eq)?|strictEqual|always)|(/+include("val")+/))(?:\s+/+include("val")+/){2}/+include("ed")
            1: "control"
            2: "control"
            3: "control"
            4: "error"
        }
        {
            match: include("bg")+/(ubind)\s+/+include("val")+include("ed")
            1: "unit"
        }
        {
            match: include("bg")+/(ucontrol)\s+(?:(getBlock)(?:\s+/+include("val")+/){2}((?:\s+/+include("val")+/){3})|(within)(?:\s+/+include("val")+/){3}\s+(/+include("val")+/)\s+/+include("val")+/|(i(?:dle|tem(?:Drop|Take))|stop|m(?:ove|ine)|a(?:pproach|utoPathfind)|pa(?:thfind|y(?:Drop|Take|Enter))|b(?:oost|uild)|targetp?|flag|unbind)(?:\s+/+include("val")+/){5}|(/+include("val")+/)(?:\s+/+include("val")+/){5})/+include("ed")
            1: "unit"
            2: "unit"
            3: "resultVar"
            4: "unit"
            5: "resultVar"
            6: "unit"
            7: "error"
        }
        {
            match: include("bg")+/(uradar)(?:(?:\s+(?:(a(?:ny|lly|ttacker)|enemy|player|flying|boss|ground)|(/+include("val")+/))){3})\s+(?:(distance|health|shield|armor|maxHealth)|(/+include("val")+/))(?:\s+/+include("val")+/){2}\s+(/+include("val")+/)/+include("ed")
            recordAllGroups: true
            1: "unit"
            2: "block"
            3: "error"
            4: "block"
            5: "error"
            6: "resultVar"
        }
        {
            match: include("bg")+/(ulocate)\s+(?:(ore)\s+(?:(core|storage|generator|turret|factory|r(?:e(?:pair|actor)|ally)|battery)|(/+include("val")+/))(?:\s+/+include("val")+/){2}((?:\s+/+include("val")+/){3})\s+/+include("val")+/|(building|spawn|damaged)\s+(?:(core|storage|generator|turret|factory|r(?:e(?:pair|actor)|ally)|battery)|(/+include("val")+/))(?:\s+/+include("val")+/){2}((?:\s+/+include("val")+/){4})|(/+include("val")+/)\s+(?:(core|storage|generator|turret|factory|r(?:e(?:pair|actor)|ally)|battery)|(/+include("val")+/))(?:\s+/+include("val")+/){6})/+include("ed")
            1: "unit"
            2: "unit"
            3: "unit"
            4: "error"
            5: "resultVar"
            6: "unit"
            7: "unit"
            8: "error"
            9: "resultVar"
            10: "error"
            11: "unit"
            12: "error"
        }
        // TODO 以下世界处理器专属未完成
        {
            match: include("bg")+/(getblock)\s+.*/+include("ed")
            1: "world"
        }
        {
            match: include("bg")+/(setblock)\s+.*/+include("ed")
            1: "world"
        }
        {
            match: include("bg")+/(spawn)\s+.*/+include("ed")
            1: "world"
        }
        {
            match: include("bg")+/(status)\s+.*/+include("ed")
            1: "world"
        }
        {
            match: include("bg")+/(spawnwave)\s+.*/+include("ed")
            1: "world"
        }
        {
            match: include("bg")+/(setrule)\s+.*/+include("ed")
            1: "world"
        }
        {
            match: include("bg")+/(message)\s+.*/+include("ed")
            1: "world"
        }
        {
            match: include("bg")+/(cutscene)\s+.*/+include("ed")
            1: "world"
        }
        {
            match: include("bg")+/(effect)\s+.*/+include("ed")
            1: "world"
        }
        {
            match: include("bg")+/(explosion)\s+.*/+include("ed")
            1: "world"
        }
        {
            match: include("bg")+/(setrate)\s+.*/+include("ed")
            1: "world"
        }
        {
            match: include("bg")+/(fetch)\s+.*/+include("ed")
            1: "world"
        }
        {
            match: include("bg")+/(sync)\s+.*/+include("ed")
            1: "world"
        }
        {
            match: include("bg")+/(getflag)\s+.*/+include("ed")
            1: "world"
        }
        {
            match: include("bg")+/(setflag)\s+.*/+include("ed")
            1: "world"
        }
        {
            match: include("bg")+/(setprop)\s+.*/+include("ed")
            1: "world"
        }
    ]
}
