{
    "while": {
        "prefix": "while",
        "body": [
            "while ${1:_} {",
            "\t$0",
            "}"
        ],
        "description": "while"
    },
    "gwhile": {
        "prefix": "gwhile",
        "body": [
            "gwhile ${1:_} {",
            "\t$0",
            "}"
        ],
        "description": "gwhile"
    },
    "do_while": {
        "prefix": "do_while",
        "body": [
            "do {",
            "\t$0",
            "} while ${1:_};"
        ],
        "description": "do_while"
    },
    "goto": {
        "prefix": "goto",
        "body": [
            "goto :${1:tag} ${2:_};$0"
        ],
        "description": "goto"
    },
    "skip": {
        "prefix": "skip",
        "body": [
            "skip ${1:_} {",
            "\t$0",
            "}"
        ],
        "description": "skip"
    },
    "if": {
        "prefix": "if",
        "body": [
            "if $1 {",
            "\t$0",
            "}"
        ],
        "description": "if"
    },
    "elif": {
        "prefix": "elif",
        "body": [
            "elif $1 {",
            "\t$0",
            "}"
        ],
        "description": "elif"
    },
    "else": {
        "prefix": "else",
        "body": [
            "else {",
            "\t$0",
            "}"
        ],
        "description": "else"
    },
    "elsel": {
        "prefix": "else line",
        "body": [
            "else",
            "\t$0"
        ],
        "description": "elsel"
    },
    "const": {
        "prefix": "const value",
        "body": [
            "const ${1:NAME} = ${2:value};$0"
        ],
        "description": "const"
    },
    "const_dexp": {
        "prefix": "const DExp",
        "body": [
            "const ${1:NAME} = (${2});$0"
        ],
        "description": "const_dexp"
    },
    "take": {
        "prefix": "take",
        "body": [
            "take${1:[${2}]} ${3:${4:RES} = }${5:VALUE};"
        ],
        "description": "take"
    },
    "argt": {
        "prefix": "take arg",
        "body": [
            "take ${1:Arg} = _${2:0};$0"
        ],
        "description": "argt"
    },
    "argc": {
        "prefix": "const arg",
        "body": [
            "const ${1:Arg} = _${2:0};$0"
        ],
        "description": "argc"
    },
    "iop": {
        "prefix": "op self",
        "body": [
            "op ${1:i} $1 ${2:+} ${3:1};$0"
        ],
        "description": "iop"
    },
    "switch": {
        "prefix": "switch",
        "body": [
            "switch $1 {",
            "\t$0",
            "}"
        ],
        "description": "switch"
    },
    "case": {
        "prefix": "switch-case",
        "body": [
            "case ${1:0}:$0"
        ],
        "description": "case"
    },
    "op": {
        "prefix": "op result a + b;",
        "body": [
            "op ${1:result} ${2:a} ${3:+} ${4:b};$0"
        ],
        "description": "op"
    },
    "print": {
        "prefix": "print values;",
        "body": [
            "print ${1:\"frog\"};$0"
        ],
        "description": "print"
    },
    "set": {
        "prefix": "a = b;",
        "body": [
            "${1} = ${2};"
        ],
        "description": "set"
    },
    "read": {
        "prefix": "read result cell1 0;",
        "body": [
            "read ${1:result} ${2:cell1} ${3:0};$0"
        ],
        "description": "read"
    },
    "write": {
        "prefix": "write result cell1 0;",
        "body": [
            "write ${1:result} ${2:cell1} ${3:0};$0"
        ],
        "description": "write"
    },
    "draw": {
        "prefix": "draw clear 0 0 0 0 0 0",
        "body": [
            "draw ${1:clear} ${2:0} ${3:0} ${4:0} 0 0 0;$0"
        ],
        "description": "draw"
    },
    "setres": {
        "prefix": "set DExp result handle",
        "body": [
            "setres ${1:RES};$0"
        ],
        "description": "setres"
    },
    "tmpvar": {
        "prefix": "use take define tmp var",
        "body": [
            "take ${1:var} = ();$0"
        ],
        "description": "tmpvar"
    },
    "printflush": {
        "prefix": "printflush message1",
        "body": [
            "printflush ${1:message1};$0"
        ],
        "description": "printflush"
    },
    "drawflush": {
        "prefix": "drawflush message1",
        "body": [
            "drawflush ${1:display1};$0"
        ],
        "description": "drawflush"
    },
    "select": {
        "prefix": "select",
        "body": [
            "select $1 {",
            "\t$0",
            "}"
        ],
        "description": "select"
    },
    "doccomments": {
        "prefix": "#**\\n...\\n*#",
        "body": [
            "#**",
            "* $1",
            "*#$0"
        ],
        "description": "doccomments"
    },
    "control": {
        "prefix": "enabled | shoot[p] | config | color",
        "body": [
            "control ${1:enabled} ${2:block1} ${3:false} 0 0 0;$0"
        ],
        "description": "control"
    },
    "ubind": {
        "prefix": "unit bind",
        "body": [
            "ubind ${2:@${1:poly}};$0"
        ],
        "description": "ubind"
    },
    "ucontrol": {
        "prefix": "unit control",
        "body": [
            "ucontrol ${1:move} ${2:0} ${3:0} 0 0 0;$0"
        ],
        "description": "ucontrol"
    },
    "ulocate": {
        "prefix": "unit locate",
        "body": [
            "ulocate building core true @copper outx outy found building;$0"
        ],
        "description": "ulocate"
    },
    "uradar": {
        "prefix": "unit radar",
        "body": [
            "uradar enemy any any distance 0 1 result;$0"
        ],
        "description": "uradar"
    },
    "radar": {
        "prefix": "radar",
        "body": [
            "radar enemy any any distance turret1 1 result;$0"
        ],
        "description": "radar"
    },
    "lookup": {
        "prefix": "block | unit | item | liquid",
        "body": [
            "lookup ${1:item} ${2:result} ${3:0};$0"
        ],
        "description": "lookup"
    },
    "sleep": {
        "prefix": "wait sec",
        "body": [
            "wait ${1:0.5};$0"
        ],
        "description": "sleep"
    },
    "wait": {
        "prefix": "wait sec",
        "body": [
            "wait ${1:0.5};$0"
        ],
        "description": "wait"
    },
    "getlink": {
        "prefix": "getlink",
        "body": [
            "getlink ${1:block} ${2:0};$0"
        ],
        "description": "getlink"
    },
    "sensor": {
        "prefix": "sensor",
        "body": [
            "sensor ${1:result} ${2:block1} ${3:@${4:copper}};$0"
        ],
        "description": "sensor"
    }
}